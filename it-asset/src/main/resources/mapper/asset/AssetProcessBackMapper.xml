<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexing.asset.mapper.AssetProcessBackMapper">
    
    <resultMap type="AssetProcessBack" id="AssetProcessBackResult">
        <result property="id"    column="id"    />
        <result property="processId"    column="process_id"    />
        <result property="instanceId"    column="instance_id"    />
        <result property="userCode"    column="user_code"    />
        <result property="assetCode"    column="asset_code"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectAssetProcessBackVo">
        select id, process_id, instance_id, user_code, asset_code, create_time, update_time from asset_process_back
    </sql>

    <select id="selectAssetProcessBackList" parameterType="AssetProcessBack" resultMap="AssetProcessBackResult">
        <include refid="selectAssetProcessBackVo"/>
        <where>  
            <if test="processId != null "> and process_id = #{processId}</if>
            <if test="instanceId != null  and instanceId != ''"> and instance_id = #{instanceId}</if>
            <if test="userCode != null  and userCode != ''"> and user_code = #{userCode}</if>
            <if test="assetCode != null  and assetCode != ''"> and asset_code = #{assetCode}</if>
        </where>
    </select>
    
    <select id="selectAssetProcessBackById" parameterType="Long" resultMap="AssetProcessBackResult">
        <include refid="selectAssetProcessBackVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAssetProcessBack" parameterType="AssetProcessBack" useGeneratedKeys="true" keyProperty="id">
        insert into asset_process_back
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="processId != null">process_id,</if>
            <if test="instanceId != null">instance_id,</if>
            <if test="userCode != null">user_code,</if>
            <if test="assetCode != null">asset_code,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="processId != null">#{processId},</if>
            <if test="instanceId != null">#{instanceId},</if>
            <if test="userCode != null">#{userCode},</if>
            <if test="assetCode != null">#{assetCode},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateAssetProcessBack" parameterType="AssetProcessBack">
        update asset_process_back
        <trim prefix="SET" suffixOverrides=",">
            <if test="processId != null">process_id = #{processId},</if>
            <if test="instanceId != null">instance_id = #{instanceId},</if>
            <if test="userCode != null">user_code = #{userCode},</if>
            <if test="assetCode != null">asset_code = #{assetCode},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAssetProcessBackById" parameterType="Long">
        delete from asset_process_back where id = #{id}
    </delete>

    <delete id="deleteAssetProcessBackByIds" parameterType="String">
        delete from asset_process_back where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>