<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexing.asset.mapper.AssetsProcessMapper">
    
    <resultMap type="AssetsProcess" id="AssetsProcessResult">
        <result property="id"    column="id"    />
        <result property="processType"    column="process_type"    />
        <result property="assetId"    column="asset_id"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>


    <sql id="selectAssetsProcessVo">
        select id, process_type, asset_id, status, create_by, create_time, update_by, update_time, remark from assets_process
    </sql>


    <select id="selectProcessWithCondition" resultMap="AssetsProcessResult">
        SELECT p.* FROM assets_process p
        WHERE p.process_type = #{processType}
        <foreach collection="processCondition" index="key" item="value">
          AND EXISTS (
                SELECT 1 FROM asset_process_variable v
                    LEFT JOIN asset_process_field f ON v.field_id = f.id
                WHERE v.process_id = p.id
                  AND f.field_key = #{key}
                  AND v.field_value = #{value}
          )
       </foreach>
        AND EXISTS (
            SELECT 1 FROM asset_process_variable v
            LEFT JOIN asset_process_field f ON v.field_id = f.id
            LEFT JOIN ${relationTableName} t ON t.${relationTableForeignKey} = v.field_value
            WHERE v.process_id = p.id
            AND f.field_key = #{relationTableForeignKeyCamel}
            <foreach collection="sqlConditionList" item="condition">
                AND t.${condition}
            </foreach>
        )
    </select>

    <select id="selectVariableListByProcessId" resultType="AssetProcessVariable">
        select t1.*, t2.field_key
        from asset_process_variable t1
        left join asset_process_field t2 on t1.field_id = t2.id
        where t1.process_id = #{processId}
    </select>

    <select id="selectAssetsProcessList" parameterType="AssetsProcess" resultMap="AssetsProcessResult">
        <include refid="selectAssetsProcessVo"/>
        <where>  
            <if test="processType != null  and processType != ''"> and process_type = #{processType}</if>
            <if test="assetId != null "> and asset_id = #{assetId}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectAssetsProcessById" parameterType="Long" resultMap="AssetsProcessResult">
        <include refid="selectAssetsProcessVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAssetsProcess" parameterType="AssetsProcess">
        insert into assets_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="processType != null and processType != ''">process_type,</if>
            <if test="assetId != null">asset_id,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="processType != null and processType != ''">#{processType},</if>
            <if test="assetId != null">#{assetId},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateAssetsProcess" parameterType="AssetsProcess">
        update assets_process
        <trim prefix="SET" suffixOverrides=",">
            <if test="processType != null and processType != ''">process_type = #{processType},</if>
            <if test="assetId != null">asset_id = #{assetId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAssetsProcessById" parameterType="Long">
        delete from assets_process where id = #{id}
    </delete>

    <delete id="deleteAssetsProcessByIds" parameterType="String">
        delete from assets_process where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>